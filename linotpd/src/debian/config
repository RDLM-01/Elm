#!/bin/bash -e
. /usr/share/debconf/confmodule

ENCKEY=/etc/linotp2/encKey
MYSQLSERVER=/usr/sbin/mysqld
MYSQLCLIENT=/usr/bin/mysql
DBFILE_FS=/etc/linotp2/token.db


# this function checks, if we are on a univention corparate server
function check_ucs() {
	which ucr
	UNIVENTION_UCR=$?
	test -d /etc/univention
	UNIVENTION_ETC=$?
	return $UNIVENTION_UCR || $UNIVENTION_ETC
}

function check_mysql_tables() {
	#mysql --host=localhost --user=linotp2 --password=linotppw --database=linotp2 --execute='show tables;'
	#echo "Starting to check DB" >> /var/log/messages
	# Test database connction
	if [ -z "`mysql --host=$DBHOST --user=$DBUSER --password=$DBPASSWORD --database=$DBNAME --execute='quit' 2>&1`" ]; then  
		DB_OK=1
		TABLES=`mysql --host=$DBHOST --user=$DBUSER --password=$DBPASSWORD --database=$DBNAME --execute='show tables;'`
		if [ -n "`echo $TABLES | grep "Config Token"`" ]; then
			TABLES_OK=1
		else
			TABLES_OK=0
		fi
	else
		DB_OK=0
		TABLES_OK=0
	fi
	#echo "DB: $DB_OK, TABLES: $TABLES_OK" >> /var/log/messages
}

# In case of univention corparate server we do not use debconf!
if [ !  $(check_ucs) ]; then
	if [ -f $ENCKEY ]; then
		db_input high linotp/generate_enckey || true
		db_go
	else
		# If the key does not exist, we do not need to ask, but
		# generate it right away.
		db_set linotp/generate_enckey true
	fi

	db_input high linotp/apache/activate || true
	db_go
	db_get linotp/apache/activate
	APACHE=$RET

	if [ "$APACHE" = "true" ]; then
		db_input high linotp/apache/admin_password || true
		db_go

		db_input high linotp/apache/ssl_create || true
		db_go

		db_input high linotp/tokendb/dbtype_apache2 || true
		db_go
		db_get linotp/tokendb/dbtype_apache2
		TOKENDB=$RET
	else
		# If not choosen apache, you can also choose SQLlite
		db_input high linotp/tokendb/dbtype || true
		db_go
		db_get linotp/tokendb/dbtype
		TOKENDB=$RET
	fi

	if [ "$TOKENDB" = "MySQL" ] || [ "$TOKENDB" = "PostgreSQL" ]; then
		db_beginblock
		db_go

		db_input high linotp/tokendb/dbhost || true
		db_go
		db_get linotp/tokendb/dbhost
		DBHOST=$RET

		db_input high linotp/tokendb/dbname || true
		db_go
		db_get linotp/tokendb/dbname
		DBNAME=$RET

		db_input high linotp/tokendb/dbuser || true
		db_go
		db_get linotp/tokendb/dbuser
		DBUSER=$RET

		db_input high linotp/tokendb/password || true
		db_go
		db_get linotp/tokendb/password
		DBPASSWORD=$RET

		db_endblock
		db_go
	fi


#
# Do the postgres configuration.
# In fact we only tell, that we do nothing.
#
	if [ "$TOKENDB" == "PostgreSQL" ]; then
		db_input high linotp/postgres/no_configuration
		db_go
	fi
#
# Ask if we should create the sqlite file
#
	if [ "$TOKENDB" == "SQLite" ]; then
		if [ -f $DBFILE_FS ]; then
			db_input high linotp/sqlite/ask_createdb
			db_go
		else
			db_set linotp/sqlite/ask_createdb true
		fi
	fi
#
# Check all effects for mysql: Does the DB exist? Do the table exist?
#
	if [ "$TOKENDB" = "MySQL" ]; then
		if [ -x $MYSQLCLIENT ]; then
			# check, if the database already exists
			check_mysql_tables
			if [ "$DB_OK" = "1" ]; then
				if [ "$TABLES_OK" = "1" ]; then
					# Database and Tables already exist. Good!
					db_input high linotp/mysql/tables_exist || true
					db_go
				else
					# Ask, if we should create the tables
					db_input high linotp/mysql/ask_createtables || true
					db_go
				fi
			else
				if [ "$DBHOST" = "localhost" ]; then
					if [ -x $MYSQLSERVER ]; then
						# server is installed locally
						db_input high linotp/mysql/ask_createdb || true
						db_go
						db_get linotp/mysql/ask_createdb
						MYSQL_CREATE_DB=$RET
					fi
					# ELSE: localhost choosen, but no mysql installed on localhost.
				else # SQL DB not on localhost
					# client and server are installed locally
					db_input high linotp/mysql/ask_createdb || true
					db_go
					db_get linotp/mysql/ask_createdb
					MYSQL_CREATE_DB=$RET
				fi
				if [ "$MYSQL_CREATE_DB" = "true" ]; then
					db_set linotp/mysql/ask_createtables true
					# Ask for the administrative credentials
					if [ ! -f /etc/lseappliance/mysql_root ]; then
						db_input high linotp/mysql/ask_rootpw || true
						db_go
					fi
				fi
			fi # end of DB_OK
		fi # end of mysqlclient
	fi  # end of $TOKENDB
fi  # end of NOT UCS
