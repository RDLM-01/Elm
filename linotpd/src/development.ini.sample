#
# LinOTP - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

linotp.useridresolver = useridresolver.PasswdIdResolver.IdResolver,useridresolver.LDAPIdResolver.IdResolver
linotp.ldapresolver.LDAPFILTER =  (&(sAMAccountName=%s)(objectClass=user))
linotp.ldapresolver.LDAPURI    =  ldap://10.123.0.2
linotp.ldapresolver.LDAPBASE   =  dc=lsetest,dc=local
linotp.ldapresolver.BINDDN     =  cn=administrator,cn=users,dc=lsetest,dc=local
linotp.ldapresolver.BINDPW     =  test123!
linotp.ldapresolver.TIMEOUT     = 10
linotp.ldapresolver.LOGINNAMEATTRIBUTE = sAMAccountName
linotp.ldapresolver.USERINFO = { "username": "uid", "phone" : "telephoneNumber", "groups" : "o",  "mobile" : "mobile",  "email" : "email", "surname" : "sn",  "givenname" : "givenName" }
linotp.ldapresolver.LDAPSEARCHFILTER = (sAMAccountName=*)(objectClass=user)

linotp.SMSProvider = smsprovider.HttpSMSProvider.HttpSMSProvider
linotp.SMSProviderTimeout = 300
linotp.SMSProviderConfig = {"URL":"http://127.0.0.1:5001/validate/ok","PARAMETER": {"von":"OWN_NUMBER","passwort":"PASSWORD","absender":"TYPE","konto":"1"},"SMS_TEXT_KEY":"text","SMS_PHONENUMBER_KEY":"ziel","HTTP_Method":"GET"}



[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 5001
# This way, we can run paster via https
#ssl_pem = *

[app:main]
use = egg:LinOTP
## sqlalchemy.url = sqlite:///%(here)s/token.db
sqlalchemy.url = sqlite:///%(here)s/token.db
# sqlalchemy.url = postgres://otpd:linotp2d@localhost/otpdb
full_stack = true
static_files = true


cache_dir = %(here)s/data
beaker.session.key = linotp
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# SQLAlchemy database URL
# sqlalchemy.url = sqlite:///%(here)s/development.db

[logger_sqlalchemy]
level = DEBUG
handlers = console
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)


# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false


[handler_hand02]
class=FileHandler
level=DEBUG
# formatter=form02
args=('python.log', 'w')


# Logging configuration
[loggers]
keys = root, routes, linotp, sqlalchemy

[handlers]
keys = console, hand02




[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers = hand02
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_linotp]
level = DEBUG
handlers = console, hand02
qualname = linotp

[logger_sqlalchemy]
level = INFO
handlers = console
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s {%(thread)d} [%(name)s][%(funcName)s #%(lineno)d] %(message)s
datefmt = %H:%M:%S

[LDAPUserIdResolver]
linotp.ldapresolver.LDAPFILTER = "(&(uid=%s)(ObjectClass=inetOrgPerson))"
linotp.ldapresolver.LDAPURI    =  ldaps://themis.az.local
linotp.ldapresolver.LDAPBASE   =  "dc=az,dc=local"
linotp.ldapresolver.BINDDN     =  "cn=admin,dc=az,dc=local"
linotp.ldapresolver.BINDPW     =  LDpw.
linotp.ldapresolver.TIMEOUT    =  5

